---
layout: post
title: Using Git submodules to publish jekyll blog on many hosts
---

Since GitHub has released the Pages features, it has become a bit of a chore to manage publications on various websites. For example, if you use Jekyll on an external site and on Github Pages, you'll need to change the links inside the rss feeds to take care the 2 domains.

To manage the publication of my 2 websites, which get the same content generated by Jekyll, I've choose to only use git submodules and a rake task to publish new content. It might not be the best solution, I recognize it's a bit messy, but I least I just have to use this command to publish all content now: _rake publish_

!/images/publish.png!

The rake task and the organisation of the project is available on GitHub: "Hub - A central place for publications":http://github.com/alx/hub/tree/master

Inside, you'll just find git submodules in use on my publication ring: *site-content* linking to my content, *alexgirard.com* and *alx.github.com* linking to 2 branches of my GitHub Page project (one branch for GitHub, one branch for "alexgirard.com":http://alexgirard.com).

Inside the rakefile, you'll find the different processes in use to publish on each website. It uses the "git gem from Scott Chacon":http://github.com/schacon/ruby-git/tree/master and was a good exercice after translating the "Git Book in french":http://github.com/alx/gitbook/tree/french for a week.

You can easily imagine how to modify it, to simulate the new "page generator":http://github.com/blog/277-pages-generator for each of your project, or host the last version of the newly versions of various open book: "Merb Book":http://book.merbist.com/, "Git Community Book":http://book.git-scm.com/ ...